--create database AssignmentONE
create database ASSIGNMENTTWO

use ASSIGNMENTTWO

create table Actors(
ActorsId int NOT NULL IDENTITY(1,1) PRIMARY KEY,
FirstName varchar(50) NOT NULL,
LastName varchar(50) NOT NULL,
Gender CHAR(1) NOT NULL,
);

CREATE TABLE Movie(
MovieId int NOT NULL IDENTITY(1,1) PRIMARY KEY,
MovieName varchar(20) NOT NULL,
MovieYear int NOT NULL,
MovieRank int NOT NULL,
);


CREATE TABLE Directors(
DirectorsId int NOT NULL IDENTITY(1,1) PRIMARY KEY,
FirstName varchar(50) NOT NULL,
LastName varchar(50) NOT NULL,
);

CREATE TABLE Casts(
CastsActorId int NOT NULL FOREIGN KEY REFERENCES Actors(ActorsId),
CastsMovieId int NOT NULL FOREIGN KEY REFERENCES Movie(MovieId),
CastsRole varchar(50) NOT NULL,
);



CREATE TABLE MovieDirector(
MovieDirectorDirectorID int NOT NULL FOREIGN KEY REFERENCES Directors(DirectorsId),
MovieDirectorMovieID int NOT NULL FOREIGN KEY REFERENCES Movie(MovieId),
);




INSERT INTO Actors VALUES
('Tanzil','Rahman','M'),
('Tahmid','Rahman','M'),
('Ragib','Salman','M'),
('Piyal','Ahmed','M'),
('Rida','Sadman','M'),
('Rifat','Khan','M'),
('Mahia','Mahia','F'),
('karina ','kapoor','F'),
('Alex','Star','F'),
('Audrey','Bishwas','F'),
('Salman','Khan','F'),
('Gosen','Khanom','F');



INSERT INTO Directors ( FirstName, LastName)
VALUES ('Sottoji','ray'),
('Christophar','Nolan'),
('James','Gunn'),
('kevin','Feige'),
('Jhontu','Baba'),
('Hero','Alam');

INSERT INTO Movie( MovieName,MovieYear, MovieRank)
VALUES ('Avengers 6','1992','13'),
('Insecticide','2001','12'),
('Pain in life','1979','70'),
('Netbeans','2014','20'),
('Java','1899','40'),
('The Pacific Rim','2020','50'),
('The Paicificst','2010','1'),
('Officer 444 (1926)','1926','30');


INSERT INTO Casts(CastsActorId, CastsMovieId, CastsRole)
VALUES ('1','1','Villain'),
('2','2','Light Director'),
('3','1','Art Director'),
('4','5','Actress'),
('5','5','Makeup Mane'),
('6','2','Producer')
,('7','1','Pankha mia'),
('8','7','Dancer'),
('9','4','Singer'),
('10','1','actress'),
('11','1','Cutie'),
('12','1','Team man'),
('1','7','Villain'),
('2','2','Fighter'),
('2','7','Villain'),
('3','7','Hero'),
('4','7','Actrees');

INSERT INTO Casts(CastsActorId, CastsMovieId, CastsRole)
VALUES ('1','8','Villain'),
('2','8','Light Director'),
('3','8','Art Director'),
('4','8','Actress'),
('5','8','Makeup Mane');





INSERT INTO MovieDirector (MovieDirectorDirectorID, MovieDirectorMovieID)
VALUES
(1,7),
(1,1),
(1,3),
(2,2),
(2,3),
(2,7),
(3,3),
(4,4),
(4,4),
(5,5),
(6,6);



Select * from Actors;
Select * from Movie;
Select * from Directors;
Select * from MovieDirector;

SELECT * FROM Casts


--1
--List first name and last name of all the actors who played in the movie 'Officer 444 (1926)'
Select FirstName, LastName , movieName FROM Actors
join casts ON Actors.ActorsId = Casts.CastsActorId
join movie ON casts.CastsMovieId = movie.movieId
WHERE movieName = 'Officer 444 (1926)'
-- The relation between movie table and Actors table lies in the casts table so we are using join on the basis of some condition to match them

--2
-- List all directors in descending order of the number of films they directed
SELECT DirectorsId, FirstName, LastName
FROM Directors
right join
(SELECT DISTINCT
MovieDirectorDirectorID,COUNT(MovieDirectorMovieID) AS totalMovies 
FROM movieDirector 
GROUP BY MovieDirectorDirectorID) AS MovieCountTable
ON directors.directorsId = MovieCountTable.MovieDirectorDirectorID
ORDER BY MovieCountTable.totalMovies DESC
-- Creating an intermidiate table named MovieCountTable which will have two coulmns directing to the directors movie count 
-- after that right joining that intermidiate table with the directors table

--3
-- Find the film(s) with the smallest cast
SELECT TOP 1 *
from Casts
RIGHT JOIN
(SELECT
CastsMovieId, COUNT(CastsActorId) as countCast
FROM Casts GROUP BY CastsMovieId) as castCountTable
on castCountTable.CastsMovieId = casts.CastsMovieId
ORDER BY castCountTable.countCast ASC
-- Creating an intermidiatle table named castCountTable to find the numberof of cast per movie then we are joining it with the cast table
-- on the condition that both castMovieId matches and then we are ordering it in asc order to find the minimum castCount on the top of the table 


--4
-- Find all the actors who acted in films by at least 10 distinct directors
SELECT Actors.FirstName, Actors.LastName, COUNT(DISTINCT MovieDirector.MovieDirectorDirectorID) as DirectorCount
FROM Actors
JOIN Casts ON Actors.ActorsId = Casts.CastsActorId
JOIN Movie ON Casts.CastsMovieId = Movie.MovieId
JOIN MovieDirector ON Movie.MovieId = MovieDirector.MovieDirectorMovieID
GROUP BY Actors.ActorsId, Actors.FirstName, Actors.LastName
HAVING COUNT(DISTINCT MovieDirector.MovieDirectorDirectorID) >= 10;
-- USING HAVING TO FIND THE GROUPS THAT HAVE COUNT MORE THAN 10


--5
SELECT *
FROM (
  SELECT Movie.MovieName, 
  COUNT(CASE WHEN Actors.Gender = 'F' THEN 1 END) AS Women, 
  COUNT(CASE WHEN Actors.Gender = 'M' THEN 1 END) AS Men
  FROM Movie 
  JOIN Casts ON Movie.MovieId = Casts.CastsMovieId
  JOIN Actors ON Casts.CastsActorId = Actors.ActorsId
  GROUP BY Movie.MovieName
) subquery
WHERE Women > Men;
-- APPLYING CONDITION TO FIND F AND M OF A MOVIE THEN GROUPING THEM BY MOVIE AND CHECKING FINALLY THE CONDITION FO MEN AND WOMAN


--6
WITH Decades AS (
SELECT
DATEADD(YEAR, DATEDIFF(YEAR, 0, MovieYear), 0) AS DecadeStart,
COUNT(MovieId) AS FilmCount
FROM Movie
GROUP BY DATEADD(YEAR, DATEDIFF(YEAR, 0, MovieYear), 0)
)
SELECT
DecadeStart,
FilmCount
FROM Decades
ORDER BY FilmCount DESC
OFFSET 0 ROWS FETCH NEXT 1 ROW ONLY;


--7
-- List all the actors who acted in at least one film in 2nd half of the 19th
--entury and in at least one film in the 1st half of the 20th century
SELECT Firstname, Lastname
FROM actors 
JOIN
( SELECT DISTINCT CastsActorId as DistinctActorId from casts
JOIN
movie
ON casts.CastsMovieId = movie.movieid
WHERE (MovieYear>=1850 and MovieYear<=1900)or(MovieYear>=1900 and MovieYear <1950))
AS actorsList
ON actors.actorsid = actorsList.DistinctActorId
-- To find the movie ids we are usign cast table to find the movies from the movie table so joining this two table in order to get the movie year 
-- and later on the actorMovie List is being joined with the main actors table as actorsList only contains the required actors



--8
-- Find all actors who acted only in films before 1980.
select distinct d.directorsId, d.FirstName, d.LastName from 
Directors d 
join 
moviedirector md 
on d.directorsId = md.MovieDirectorDirectorID
join
movie m
on md.MovieDirectorMovieID = m.movieId
WHERE (m.MovieYear % 400 = 0) OR (m.MovieYear % 4 = 0 AND m.MovieYear % 100 != 0)
-- SIMPLE LOGIC FOR LEAP YEAR IS APPLIED

--9
-- Find all actors who acted only in films before 1980.
select Distinct Firstname, Lastname  from Actors
join Casts on actors.actorsId = Casts.CastsActorId
join movie on Casts.CastsMovieId = movie.movieId
where MovieYear<1980
group by Firstname, Lastname
-- CHECKING IF THE ACTORS MOVIE IS ADVERTISED BEFORE 1980

--10


